// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// CDRdistmat
IntegerMatrix CDRdistmat(std::vector<std::string> cdrs, Rcpp::StringVector clones, int cdr);
RcppExport SEXP _TCRdist_CDRdistmat(SEXP cdrsSEXP, SEXP clonesSEXP, SEXP cdrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string> >::type cdrs(cdrsSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type clones(clonesSEXP);
    Rcpp::traits::input_parameter< int >::type cdr(cdrSEXP);
    rcpp_result_gen = Rcpp::wrap(CDRdistmat(cdrs, clones, cdr));
    return rcpp_result_gen;
END_RCPP
}
// Vdist
Rcpp::IntegerMatrix Vdist(std::vector<std::string> cdrs, Rcpp::StringVector Vgene, int gap_penalty, int weight);
RcppExport SEXP _TCRdist_Vdist(SEXP cdrsSEXP, SEXP VgeneSEXP, SEXP gap_penaltySEXP, SEXP weightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string> >::type cdrs(cdrsSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type Vgene(VgeneSEXP);
    Rcpp::traits::input_parameter< int >::type gap_penalty(gap_penaltySEXP);
    Rcpp::traits::input_parameter< int >::type weight(weightSEXP);
    rcpp_result_gen = Rcpp::wrap(Vdist(cdrs, Vgene, gap_penalty, weight));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_TCRdist_CDRdistmat", (DL_FUNC) &_TCRdist_CDRdistmat, 3},
    {"_TCRdist_Vdist", (DL_FUNC) &_TCRdist_Vdist, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_TCRdist(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
